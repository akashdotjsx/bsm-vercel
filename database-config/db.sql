-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.analytics_snapshots (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  snapshot_date date NOT NULL,
  period_type character varying NOT NULL,
  tickets_created integer DEFAULT 0,
  tickets_resolved integer DEFAULT 0,
  tickets_closed integer DEFAULT 0,
  tickets_reopened integer DEFAULT 0,
  tickets_overdue integer DEFAULT 0,
  sla_breaches integer DEFAULT 0,
  avg_first_response_time_minutes integer DEFAULT 0,
  avg_resolution_time_minutes integer DEFAULT 0,
  sla_compliance_percentage numeric DEFAULT 0.00,
  service_requests_created integer DEFAULT 0,
  service_requests_completed integer DEFAULT 0,
  service_requests_rejected integer DEFAULT 0,
  avg_approval_time_hours integer DEFAULT 0,
  workflows_executed integer DEFAULT 0,
  workflows_successful integer DEFAULT 0,
  workflows_failed integer DEFAULT 0,
  avg_workflow_duration_seconds integer DEFAULT 0,
  active_users integer DEFAULT 0,
  total_logins integer DEFAULT 0,
  csat_responses integer DEFAULT 0,
  avg_csat_score numeric DEFAULT 0.00,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT analytics_snapshots_pkey PRIMARY KEY (id),
  CONSTRAINT analytics_snapshots_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id)
);
CREATE TABLE public.audit_logs (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  action character varying NOT NULL,
  entity_type character varying NOT NULL,
  entity_id uuid,
  user_id uuid,
  user_email character varying,
  ip_address inet,
  user_agent text,
  old_values jsonb,
  new_values jsonb,
  additional_data jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT audit_logs_pkey PRIMARY KEY (id),
  CONSTRAINT audit_logs_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT audit_logs_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.custom_reports (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  name character varying NOT NULL,
  description text,
  report_type character varying NOT NULL,
  data_source character varying NOT NULL,
  filters jsonb DEFAULT '{}'::jsonb,
  columns jsonb DEFAULT '[]'::jsonb,
  aggregations jsonb DEFAULT '{}'::jsonb,
  chart_config jsonb DEFAULT '{}'::jsonb,
  created_by uuid,
  is_public boolean DEFAULT false,
  shared_with ARRAY,
  view_count integer DEFAULT 0,
  last_viewed_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT custom_reports_pkey PRIMARY KEY (id),
  CONSTRAINT custom_reports_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT custom_reports_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.knowledge_articles (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  title character varying NOT NULL,
  content text NOT NULL,
  summary text,
  category character varying,
  tags ARRAY,
  related_service_ids ARRAY,
  author_id uuid,
  reviewer_id uuid,
  status character varying DEFAULT 'draft'::character varying,
  view_count integer DEFAULT 0,
  helpful_count integer DEFAULT 0,
  not_helpful_count integer DEFAULT 0,
  last_reviewed_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT knowledge_articles_pkey PRIMARY KEY (id),
  CONSTRAINT knowledge_articles_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT knowledge_articles_author_id_fkey FOREIGN KEY (author_id) REFERENCES public.profiles(id),
  CONSTRAINT knowledge_articles_reviewer_id_fkey FOREIGN KEY (reviewer_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.article_bookmarks (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  article_id uuid NOT NULL,
  user_id uuid NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT article_bookmarks_pkey PRIMARY KEY (id),
  CONSTRAINT article_bookmarks_article_id_fkey FOREIGN KEY (article_id) REFERENCES public.knowledge_articles(id),
  CONSTRAINT article_bookmarks_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT article_bookmarks_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT article_bookmarks_unique UNIQUE (article_id, user_id)
);
CREATE TABLE public.article_comments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  article_id uuid NOT NULL,
  user_id uuid NOT NULL,
  content text NOT NULL,
  is_internal boolean DEFAULT false,
  parent_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT article_comments_pkey PRIMARY KEY (id),
  CONSTRAINT article_comments_article_id_fkey FOREIGN KEY (article_id) REFERENCES public.knowledge_articles(id),
  CONSTRAINT article_comments_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT article_comments_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT article_comments_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES public.article_comments(id)
);
CREATE TABLE public.article_votes (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  article_id uuid NOT NULL,
  user_id uuid NOT NULL,
  vote_type character varying NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT article_votes_pkey PRIMARY KEY (id),
  CONSTRAINT article_votes_article_id_fkey FOREIGN KEY (article_id) REFERENCES public.knowledge_articles(id),
  CONSTRAINT article_votes_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT article_votes_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT article_votes_unique UNIQUE (article_id, user_id)
);
CREATE TABLE public.article_revisions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  article_id uuid NOT NULL,
  version_number integer NOT NULL,
  title character varying NOT NULL,
  content text NOT NULL,
  summary text,
  change_description text,
  changed_by uuid NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT article_revisions_pkey PRIMARY KEY (id),
  CONSTRAINT article_revisions_article_id_fkey FOREIGN KEY (article_id) REFERENCES public.knowledge_articles(id),
  CONSTRAINT article_revisions_changed_by_fkey FOREIGN KEY (changed_by) REFERENCES public.profiles(id),
  CONSTRAINT article_revisions_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT article_revisions_unique UNIQUE (article_id, version_number)
);
CREATE TABLE public.metrics_cache (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  metric_name character varying NOT NULL,
  metric_value jsonb NOT NULL,
  calculated_at timestamp with time zone DEFAULT now(),
  expires_at timestamp with time zone NOT NULL,
  CONSTRAINT metrics_cache_pkey PRIMARY KEY (id),
  CONSTRAINT metrics_cache_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id)
);
CREATE TABLE public.notification_preferences (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  email_ticket_assigned boolean DEFAULT true,
  email_ticket_updated boolean DEFAULT true,
  email_ticket_resolved boolean DEFAULT false,
  email_service_request_approved boolean DEFAULT true,
  email_workflow_completed boolean DEFAULT false,
  email_digest_frequency character varying DEFAULT 'daily'::character varying,
  app_ticket_assigned boolean DEFAULT true,
  app_ticket_updated boolean DEFAULT true,
  app_service_request_approved boolean DEFAULT true,
  app_workflow_assigned boolean DEFAULT true,
  sms_critical_tickets boolean DEFAULT false,
  sms_escalations boolean DEFAULT false,
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notification_preferences_pkey PRIMARY KEY (id),
  CONSTRAINT notification_preferences_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.organizations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL,
  domain character varying,
  status USER-DEFINED DEFAULT 'active'::organization_status,
  tier USER-DEFINED DEFAULT 'basic'::organization_tier,
  health_score integer DEFAULT 100 CHECK (health_score >= 0 AND health_score <= 100),
  settings jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT organizations_pkey PRIMARY KEY (id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL,
  organization_id uuid,
  email character varying NOT NULL UNIQUE,
  first_name character varying,
  last_name character varying,
  display_name character varying,
  avatar_url text,
  phone character varying,
  role USER-DEFINED DEFAULT 'user'::user_role,
  department character varying,
  manager_id uuid,
  timezone character varying DEFAULT 'UTC'::character varying,
  is_active boolean DEFAULT true,
  last_login timestamp with time zone,
  preferences jsonb DEFAULT '{}'::jsonb,
  status character varying DEFAULT 'Online'::character varying,
  status_color character varying DEFAULT '#16a34a'::character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id),
  CONSTRAINT profiles_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT profiles_manager_id_fkey FOREIGN KEY (manager_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.user_custom_statuses (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  status_label character varying NOT NULL,
  status_color character varying NOT NULL,
  is_active boolean DEFAULT true,
  last_used_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_custom_statuses_pkey PRIMARY KEY (id),
  CONSTRAINT user_custom_statuses_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id) ON DELETE CASCADE,
  CONSTRAINT unique_user_status UNIQUE (user_id, status_label)
);
CREATE TABLE public.service_categories (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  name character varying NOT NULL,
  description text,
  icon character varying,
  color character varying,
  parent_id uuid,
  sort_order integer DEFAULT 0,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT service_categories_pkey PRIMARY KEY (id),
  CONSTRAINT service_categories_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT service_categories_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES public.service_categories(id)
);
CREATE TABLE public.service_request_approvals (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  service_request_id uuid NOT NULL,
  approver_id uuid,
  status USER-DEFINED NOT NULL,
  comments text,
  approved_at timestamp with time zone DEFAULT now(),
  CONSTRAINT service_request_approvals_pkey PRIMARY KEY (id),
  CONSTRAINT service_request_approvals_service_request_id_fkey FOREIGN KEY (service_request_id) REFERENCES public.service_requests(id),
  CONSTRAINT service_request_approvals_approver_id_fkey FOREIGN KEY (approver_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.service_requests (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  request_number character varying NOT NULL UNIQUE,
  service_id uuid NOT NULL,
  title character varying NOT NULL,
  description text,
  business_justification text,
  urgency USER-DEFINED DEFAULT 'medium'::urgency_level,
  priority USER-DEFINED DEFAULT 'medium'::ticket_priority,
  status USER-DEFINED DEFAULT 'pending'::request_status,
  requester_id uuid,
  assignee_id uuid,
  approver_id uuid,
  form_data jsonb DEFAULT '{}'::jsonb,
  approval_notes text,
  approved_at timestamp with time zone,
  estimated_delivery_date timestamp with time zone,
  actual_delivery_date timestamp with time zone,
  delivery_notes text,
  ticket_id uuid,
  estimated_cost numeric,
  actual_cost numeric,
  cost_center character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT service_requests_pkey PRIMARY KEY (id),
  CONSTRAINT service_requests_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT service_requests_service_id_fkey FOREIGN KEY (service_id) REFERENCES public.services(id),
  CONSTRAINT service_requests_requester_id_fkey FOREIGN KEY (requester_id) REFERENCES public.profiles(id),
  CONSTRAINT service_requests_assignee_id_fkey FOREIGN KEY (assignee_id) REFERENCES public.profiles(id),
  CONSTRAINT service_requests_approver_id_fkey FOREIGN KEY (approver_id) REFERENCES public.profiles(id),
  CONSTRAINT service_requests_ticket_id_fkey FOREIGN KEY (ticket_id) REFERENCES public.tickets(id)
);
CREATE TABLE public.services (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  category_id uuid,
  name character varying NOT NULL,
  description text,
  short_description character varying,
  icon character varying,
  status USER-DEFINED DEFAULT 'draft'::service_status,
  service_owner_id uuid,
  support_team_id uuid,
  sla_policy_id uuid,
  is_requestable boolean DEFAULT true,
  requires_approval boolean DEFAULT false,
  estimated_delivery_days integer,
  cost_per_request numeric,
  request_form_config jsonb DEFAULT '{}'::jsonb,
  approval_workflow_id uuid,
  tags ARRAY,
  keywords ARRAY,
  popularity_score integer DEFAULT 0,
  average_rating numeric DEFAULT 0.00,
  total_requests integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT services_pkey PRIMARY KEY (id),
  CONSTRAINT services_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT services_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.service_categories(id),
  CONSTRAINT services_service_owner_id_fkey FOREIGN KEY (service_owner_id) REFERENCES public.profiles(id),
  CONSTRAINT services_support_team_id_fkey FOREIGN KEY (support_team_id) REFERENCES public.teams(id),
  CONSTRAINT services_sla_policy_id_fkey FOREIGN KEY (sla_policy_id) REFERENCES public.sla_policies(id)
);
CREATE TABLE public.sla_policies (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  name character varying NOT NULL,
  description text,
  priority USER-DEFINED NOT NULL,
  first_response_time_hours integer NOT NULL,
  resolution_time_hours integer NOT NULL,
  business_hours_only boolean DEFAULT false,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT sla_policies_pkey PRIMARY KEY (id),
  CONSTRAINT sla_policies_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id)
);
CREATE TABLE public.system_settings (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid,
  setting_key character varying NOT NULL,
  setting_value jsonb NOT NULL,
  setting_type character varying DEFAULT 'general'::character varying,
  description text,
  is_encrypted boolean DEFAULT false,
  updated_by uuid,
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT system_settings_pkey PRIMARY KEY (id),
  CONSTRAINT system_settings_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT system_settings_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.team_members (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  team_id uuid NOT NULL,
  user_id uuid NOT NULL,
  role character varying DEFAULT 'member'::character varying,
  joined_at timestamp with time zone DEFAULT now(),
  CONSTRAINT team_members_pkey PRIMARY KEY (id),
  CONSTRAINT team_members_team_id_fkey FOREIGN KEY (team_id) REFERENCES public.teams(id),
  CONSTRAINT team_members_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.teams (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  name character varying NOT NULL,
  description text,
  lead_id uuid,
  department character varying,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT teams_pkey PRIMARY KEY (id),
  CONSTRAINT teams_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT teams_lead_id_fkey FOREIGN KEY (lead_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.ticket_attachments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  ticket_id uuid NOT NULL,
  uploaded_by uuid,
  filename character varying NOT NULL,
  file_size integer,
  mime_type character varying,
  storage_path text NOT NULL,
  is_public boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT ticket_attachments_pkey PRIMARY KEY (id),
  CONSTRAINT ticket_attachments_ticket_id_fkey FOREIGN KEY (ticket_id) REFERENCES public.tickets(id),
  CONSTRAINT ticket_attachments_uploaded_by_fkey FOREIGN KEY (uploaded_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.ticket_comments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  ticket_id uuid NOT NULL,
  author_id uuid,
  content text NOT NULL,
  is_internal boolean DEFAULT false,
  is_system boolean DEFAULT false,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT ticket_comments_pkey PRIMARY KEY (id),
  CONSTRAINT ticket_comments_ticket_id_fkey FOREIGN KEY (ticket_id) REFERENCES public.tickets(id),
  CONSTRAINT ticket_comments_author_id_fkey FOREIGN KEY (author_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.ticket_checklist (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  ticket_id uuid NOT NULL,
  text text NOT NULL,
  completed boolean DEFAULT false,
  assignee_id uuid,
  due_date timestamp with time zone,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT ticket_checklist_pkey PRIMARY KEY (id),
  CONSTRAINT ticket_checklist_ticket_id_fkey FOREIGN KEY (ticket_id) REFERENCES public.tickets(id),
  CONSTRAINT ticket_checklist_assignee_id_fkey FOREIGN KEY (assignee_id) REFERENCES public.profiles(id),
  CONSTRAINT ticket_checklist_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.ticket_history (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  ticket_id uuid NOT NULL,
  changed_by uuid,
  field_name character varying NOT NULL,
  old_value text,
  new_value text,
  change_reason character varying,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT ticket_history_pkey PRIMARY KEY (id),
  CONSTRAINT ticket_history_ticket_id_fkey FOREIGN KEY (ticket_id) REFERENCES public.tickets(id),
  CONSTRAINT ticket_history_changed_by_fkey FOREIGN KEY (changed_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.ticket_checklist (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  ticket_id uuid NOT NULL,
  item_text character varying NOT NULL,
  is_completed boolean DEFAULT false,
  completed_by uuid,
  completed_at timestamp with time zone,
  sort_order integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT ticket_checklist_pkey PRIMARY KEY (id),
  CONSTRAINT ticket_checklist_ticket_id_fkey FOREIGN KEY (ticket_id) REFERENCES public.tickets(id),
  CONSTRAINT ticket_checklist_completed_by_fkey FOREIGN KEY (completed_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.tickets (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  ticket_number character varying NOT NULL UNIQUE,
  title character varying NOT NULL,
  description text,
  type USER-DEFINED DEFAULT 'request'::ticket_type,
  category character varying,
  subcategory character varying,
  priority USER-DEFINED DEFAULT 'medium'::ticket_priority,
  urgency USER-DEFINED DEFAULT 'medium'::urgency_level,
  impact USER-DEFINED DEFAULT 'medium'::impact_level,
  status USER-DEFINED DEFAULT 'new'::ticket_status,
  requester_id uuid,
  assignee_id uuid,
  assignee_ids uuid[] DEFAULT ARRAY[]::uuid[],
  team_id uuid,
  sla_policy_id uuid,
  due_date timestamp with time zone,
  first_response_at timestamp with time zone,
  resolved_at timestamp with time zone,
  closed_at timestamp with time zone,
  sla_breached boolean DEFAULT false,
  channel USER-DEFINED DEFAULT 'web'::channel_type,
  source_reference character varying,
  escalation_level integer DEFAULT 0,
  ai_sentiment character varying,
  ai_confidence numeric,
  auto_assigned boolean DEFAULT false,
  custom_fields jsonb DEFAULT '{}'::jsonb,
  tags ARRAY,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT tickets_pkey PRIMARY KEY (id),
  CONSTRAINT tickets_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT tickets_requester_id_fkey FOREIGN KEY (requester_id) REFERENCES public.profiles(id),
  CONSTRAINT tickets_assignee_id_fkey FOREIGN KEY (assignee_id) REFERENCES public.profiles(id),
  CONSTRAINT tickets_team_id_fkey FOREIGN KEY (team_id) REFERENCES public.teams(id),
  CONSTRAINT tickets_sla_policy_id_fkey FOREIGN KEY (sla_policy_id) REFERENCES public.sla_policies(id)
);
CREATE TABLE public.custom_column_definitions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  user_id uuid NOT NULL,
  title character varying(255) NOT NULL,
  type character varying(50) NOT NULL CHECK (type IN ('text', 'number', 'date')),
  options jsonb DEFAULT '[]'::jsonb,
  default_value text,
  visible boolean DEFAULT true,
  sort_order integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT custom_column_definitions_pkey PRIMARY KEY (id),
  CONSTRAINT custom_column_definitions_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id) ON DELETE CASCADE,
  CONSTRAINT custom_column_definitions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id) ON DELETE CASCADE
);
CREATE TABLE public.workflow_executions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  workflow_id uuid NOT NULL,
  organization_id uuid NOT NULL,
  triggered_by character varying,
  trigger_user_id uuid,
  context_data jsonb DEFAULT '{}'::jsonb,
  ticket_id uuid,
  service_request_id uuid,
  status character varying DEFAULT 'running'::character varying,
  current_step character varying,
  error_message text,
  started_at timestamp with time zone DEFAULT now(),
  completed_at timestamp with time zone,
  duration_seconds integer,
  execution_log jsonb DEFAULT '[]'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT workflow_executions_pkey PRIMARY KEY (id),
  CONSTRAINT workflow_executions_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES public.workflows(id),
  CONSTRAINT workflow_executions_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT workflow_executions_trigger_user_id_fkey FOREIGN KEY (trigger_user_id) REFERENCES public.profiles(id),
  CONSTRAINT workflow_executions_ticket_id_fkey FOREIGN KEY (ticket_id) REFERENCES public.tickets(id),
  CONSTRAINT workflow_executions_service_request_id_fkey FOREIGN KEY (service_request_id) REFERENCES public.service_requests(id)
);
CREATE TABLE public.workflow_schedules (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  workflow_id uuid NOT NULL,
  organization_id uuid NOT NULL,
  name character varying NOT NULL,
  cron_expression character varying NOT NULL,
  timezone character varying DEFAULT 'UTC'::character varying,
  is_active boolean DEFAULT true,
  last_execution_at timestamp with time zone,
  next_execution_at timestamp with time zone,
  total_executions integer DEFAULT 0,
  failed_executions integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT workflow_schedules_pkey PRIMARY KEY (id),
  CONSTRAINT workflow_schedules_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES public.workflows(id),
  CONSTRAINT workflow_schedules_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id)
);
CREATE TABLE public.workflow_step_executions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  execution_id uuid NOT NULL,
  step_id character varying NOT NULL,
  step_name character varying NOT NULL,
  step_type character varying NOT NULL,
  status character varying DEFAULT 'pending'::character varying,
  input_data jsonb DEFAULT '{}'::jsonb,
  output_data jsonb DEFAULT '{}'::jsonb,
  error_message text,
  started_at timestamp with time zone DEFAULT now(),
  completed_at timestamp with time zone,
  duration_seconds integer,
  assigned_to uuid,
  completed_by uuid,
  due_date timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT workflow_step_executions_pkey PRIMARY KEY (id),
  CONSTRAINT workflow_step_executions_execution_id_fkey FOREIGN KEY (execution_id) REFERENCES public.workflow_executions(id),
  CONSTRAINT workflow_step_executions_assigned_to_fkey FOREIGN KEY (assigned_to) REFERENCES public.profiles(id),
  CONSTRAINT workflow_step_executions_completed_by_fkey FOREIGN KEY (completed_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.workflow_templates (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL,
  description text,
  category character varying,
  industry character varying,
  template_definition jsonb NOT NULL,
  configuration_schema jsonb,
  is_public boolean DEFAULT false,
  created_by uuid,
  version character varying DEFAULT '1.0'::character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT workflow_templates_pkey PRIMARY KEY (id),
  CONSTRAINT workflow_templates_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.workflows (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  name character varying NOT NULL,
  description text,
  category character varying,
  definition jsonb NOT NULL,
  version integer DEFAULT 1,
  is_template boolean DEFAULT false,
  status USER-DEFINED DEFAULT 'draft'::workflow_status,
  created_by uuid,
  last_modified_by uuid,
  total_executions integer DEFAULT 0,
  successful_executions integer DEFAULT 0,
  failed_executions integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT workflows_pkey PRIMARY KEY (id),
  CONSTRAINT workflows_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT workflows_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id),
  CONSTRAINT workflows_last_modified_by_fkey FOREIGN KEY (last_modified_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.roles (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  name character varying(255) NOT NULL,
  description text,
  is_system_role boolean DEFAULT false,
  is_active boolean DEFAULT true,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT roles_pkey PRIMARY KEY (id),
  CONSTRAINT unique_role_per_org UNIQUE (organization_id, name),
  CONSTRAINT roles_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT roles_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.permissions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying(255) NOT NULL UNIQUE,
  display_name character varying(255) NOT NULL,
  description text,
  module USER-DEFINED NOT NULL,
  action USER-DEFINED NOT NULL,
  resource_pattern character varying(255),
  is_system_permission boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT permissions_pkey PRIMARY KEY (id),
  CONSTRAINT unique_permission UNIQUE (module, action, resource_pattern)
);
CREATE TABLE public.role_permissions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  role_id uuid NOT NULL,
  permission_id uuid NOT NULL,
  granted boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT role_permissions_pkey PRIMARY KEY (id),
  CONSTRAINT unique_role_permission UNIQUE (role_id, permission_id),
  CONSTRAINT role_permissions_role_id_fkey FOREIGN KEY (role_id) REFERENCES public.roles(id),
  CONSTRAINT role_permissions_permission_id_fkey FOREIGN KEY (permission_id) REFERENCES public.permissions(id)
);
CREATE TABLE public.user_roles (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  role_id uuid NOT NULL,
  assigned_by uuid,
  assigned_at timestamp with time zone DEFAULT now(),
  expires_at timestamp with time zone,
  is_active boolean DEFAULT true,
  CONSTRAINT user_roles_pkey PRIMARY KEY (id),
  CONSTRAINT unique_user_role UNIQUE (user_id, role_id),
  CONSTRAINT user_roles_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT user_roles_role_id_fkey FOREIGN KEY (role_id) REFERENCES public.roles(id),
  CONSTRAINT user_roles_assigned_by_fkey FOREIGN KEY (assigned_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.user_permissions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  permission_id uuid NOT NULL,
  granted boolean NOT NULL,
  assigned_by uuid,
  assigned_at timestamp with time zone DEFAULT now(),
  expires_at timestamp with time zone,
  reason text,
  CONSTRAINT user_permissions_pkey PRIMARY KEY (id),
  CONSTRAINT unique_user_permission UNIQUE (user_id, permission_id),
  CONSTRAINT user_permissions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT user_permissions_permission_id_fkey FOREIGN KEY (permission_id) REFERENCES public.permissions(id),
  CONSTRAINT user_permissions_assigned_by_fkey FOREIGN KEY (assigned_by) REFERENCES public.profiles(id)
);

-- CMDB (Configuration Management Database) Tables
CREATE TABLE public.asset_types (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  name character varying NOT NULL,
  description text,
  icon character varying,
  color character varying DEFAULT '#6366f1',
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT asset_types_pkey PRIMARY KEY (id),
  CONSTRAINT unique_asset_type_per_org UNIQUE (organization_id, name),
  CONSTRAINT asset_types_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id)
);

CREATE TABLE public.assets (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  asset_type_id uuid NOT NULL,
  asset_tag character varying NOT NULL,
  name character varying NOT NULL,
  hostname character varying,
  ip_address inet,
  mac_address macaddr,
  operating_system character varying,
  cpu_info character varying,
  memory_gb integer,
  storage_gb integer,
  status character varying DEFAULT 'active',
  criticality character varying DEFAULT 'medium',
  location character varying,
  owner_id uuid,
  department character varying,
  purchase_date date,
  warranty_expiry date,
  cost numeric(12,2),
  vendor character varying,
  model character varying,
  serial_number character varying,
  discovered_by character varying,
  last_seen_at timestamp with time zone DEFAULT now(),
  notes text,
  custom_fields jsonb DEFAULT '{}',
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT assets_pkey PRIMARY KEY (id),
  CONSTRAINT unique_asset_tag_per_org UNIQUE (organization_id, asset_tag),
  CONSTRAINT assets_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT assets_asset_type_id_fkey FOREIGN KEY (asset_type_id) REFERENCES public.asset_types(id),
  CONSTRAINT assets_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES public.profiles(id),
  CONSTRAINT valid_status CHECK (status IN ('active', 'inactive', 'maintenance', 'retired', 'disposed')),
  CONSTRAINT valid_criticality CHECK (criticality IN ('low', 'medium', 'high', 'critical'))
);

CREATE TABLE public.asset_relationships (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  source_asset_id uuid NOT NULL,
  target_asset_id uuid NOT NULL,
  relationship_type character varying NOT NULL,
  description text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT asset_relationships_pkey PRIMARY KEY (id),
  CONSTRAINT unique_asset_relationship UNIQUE (source_asset_id, target_asset_id, relationship_type),
  CONSTRAINT asset_relationships_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT asset_relationships_source_asset_id_fkey FOREIGN KEY (source_asset_id) REFERENCES public.assets(id),
  CONSTRAINT asset_relationships_target_asset_id_fkey FOREIGN KEY (target_asset_id) REFERENCES public.assets(id),
  CONSTRAINT no_self_relationship CHECK (source_asset_id != target_asset_id),
  CONSTRAINT valid_relationship_type CHECK (relationship_type IN ('depends_on', 'hosts', 'connects_to', 'manages', 'monitors', 'backs_up', 'provides_service_to'))
);

CREATE TABLE public.business_services (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  name character varying NOT NULL,
  description text,
  service_type character varying DEFAULT 'application',
  status character varying DEFAULT 'active',
  criticality character varying DEFAULT 'medium',
  owner_id uuid,
  business_owner_id uuid,
  sla_target_uptime numeric(5,2) DEFAULT 99.9,
  sla_target_response_time integer,
  maintenance_window character varying,
  cost_center character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT business_services_pkey PRIMARY KEY (id),
  CONSTRAINT unique_service_per_org UNIQUE (organization_id, name),
  CONSTRAINT business_services_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT business_services_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES public.profiles(id),
  CONSTRAINT business_services_business_owner_id_fkey FOREIGN KEY (business_owner_id) REFERENCES public.profiles(id),
  CONSTRAINT valid_service_status CHECK (status IN ('active', 'inactive', 'maintenance', 'deprecated')),
  CONSTRAINT valid_service_criticality CHECK (criticality IN ('low', 'medium', 'high', 'critical')),
  CONSTRAINT valid_service_type CHECK (service_type IN ('application', 'infrastructure', 'platform', 'database', 'network', 'security'))
);

CREATE TABLE public.service_asset_mappings (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  business_service_id uuid NOT NULL,
  asset_id uuid NOT NULL,
  dependency_type character varying DEFAULT 'supports',
  impact_level character varying DEFAULT 'medium',
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT service_asset_mappings_pkey PRIMARY KEY (id),
  CONSTRAINT unique_service_asset_mapping UNIQUE (business_service_id, asset_id),
  CONSTRAINT service_asset_mappings_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT service_asset_mappings_business_service_id_fkey FOREIGN KEY (business_service_id) REFERENCES public.business_services(id),
  CONSTRAINT service_asset_mappings_asset_id_fkey FOREIGN KEY (asset_id) REFERENCES public.assets(id),
  CONSTRAINT valid_dependency_type CHECK (dependency_type IN ('supports', 'requires', 'provides')),
  CONSTRAINT valid_impact_level CHECK (impact_level IN ('low', 'medium', 'high', 'critical'))
);

CREATE TABLE public.discovery_rules (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  name character varying NOT NULL,
  description text,
  rule_type character varying NOT NULL,
  configuration jsonb NOT NULL DEFAULT '{}',
  schedule_cron character varying,
  is_active boolean DEFAULT true,
  run_count integer DEFAULT 0,
  success_count integer DEFAULT 0,
  last_run_at timestamp with time zone,
  last_success_at timestamp with time zone,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT discovery_rules_pkey PRIMARY KEY (id),
  CONSTRAINT unique_discovery_rule_per_org UNIQUE (organization_id, name),
  CONSTRAINT discovery_rules_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT discovery_rules_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id),
  CONSTRAINT valid_rule_type CHECK (rule_type IN ('network_scan', 'cloud_discovery', 'agent_based', 'snmp_scan', 'wmi_scan', 'ssh_scan'))
);

CREATE TABLE public.discovery_logs (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  discovery_rule_id uuid NOT NULL,
  status character varying NOT NULL,
  started_at timestamp with time zone DEFAULT now(),
  completed_at timestamp with time zone,
  assets_discovered integer DEFAULT 0,
  assets_updated integer DEFAULT 0,
  error_message text,
  execution_details jsonb DEFAULT '{}',
  CONSTRAINT discovery_logs_pkey PRIMARY KEY (id),
  CONSTRAINT discovery_logs_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT discovery_logs_discovery_rule_id_fkey FOREIGN KEY (discovery_rule_id) REFERENCES public.discovery_rules(id),
  CONSTRAINT valid_discovery_status CHECK (status IN ('running', 'completed', 'failed', 'cancelled'))
);

CREATE TABLE public.search_suggestions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  organization_id uuid NOT NULL,
  user_id uuid NOT NULL,
  query text NOT NULL,
  search_type character varying DEFAULT 'all',
  result_count integer DEFAULT 0,
  clicked_result_id uuid,
  clicked_result_type character varying,
  ip_address inet,
  user_agent text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT search_suggestions_pkey PRIMARY KEY (id),
  CONSTRAINT search_suggestions_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT search_suggestions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT valid_search_type CHECK (search_type IN ('all', 'tickets', 'users', 'knowledge', 'services', 'assets')),
  CONSTRAINT valid_clicked_result_type CHECK (clicked_result_type IN ('ticket', 'user', 'knowledge', 'service', 'asset'))
);

-- Chat/Conversation Tables
CREATE TABLE public.conversations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  organization_id uuid,
  chat_name character varying DEFAULT 'New Chat'::character varying,
  openai_thread_id character varying,
  openai_assistant_id character varying,
  is_archived boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT conversations_pkey PRIMARY KEY (id),
  CONSTRAINT conversations_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT conversations_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id)
);

CREATE TABLE public.chat_messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  conversation_id uuid NOT NULL,
  message_id character varying NOT NULL UNIQUE,
  user_query text NOT NULL,
  ai_response text DEFAULT ''::text,
  message_type character varying DEFAULT 'ai'::character varying,
  tool_calls jsonb DEFAULT '[]'::jsonb,
  extra_data jsonb DEFAULT '{}'::jsonb,
  images text[] DEFAULT '{}'::text[],
  videos text[] DEFAULT '{}'::text[],
  streaming_error boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT chat_messages_pkey PRIMARY KEY (id),
  CONSTRAINT chat_messages_conversation_id_fkey FOREIGN KEY (conversation_id) REFERENCES public.conversations(id)
);